name: Build Server CI

on:
    repository_dispatch:
      types: [ build_all_server ]

jobs:
  build:
    runs-on: ubuntu-latest

    if: github.actor == github.event.repository.owner.login

    strategy:
      matrix:
        #node-version: [8.x, 10.x, 12.x]
        node-version: [13.x]

    steps:
    - name: Event Input
      run: |
        echo event-type: ${{ github.event.action }}
        echo action: ${{ github.event.client_payload.action }}
        echo label: ${{ github.event.client_payload.label }}
        echo library: ${{ github.event.client_payload.library }}
    - name: Repository Dispatch - Server Firebase
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.ACCESS_TOKEN }}
        repository: thzero/library_server_firebase
        event-type: 'build_all'
        client-payload: '{ "action": "${{ github.event.client_payload.action }}", "label": "${{ github.event.client_payload.label }}" }'
    - name: Repository Dispatch - Server Service Validation Joi
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.ACCESS_TOKEN }}
        repository: thzero/library_server_validation_joi
        event-type: 'build_all'
        client-payload: '{ "action": "${{ github.event.client_payload.action }}", "label": "${{ github.event.client_payload.label }}" }'
    - name: Repository Dispatch - Server
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.ACCESS_TOKEN }}
        repository: thzero/library_server_repository_mongo
        event-type: 'build_all'
        client-payload: '{ "action": "${{ github.event.client_payload.action }}", "label": "${{ github.event.client_payload.label }}" }'
    - name: Repository Dispatch - Server Service Grpc
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.ACCESS_TOKEN }}
        repository: thzero/library_server_service_grpc
        event-type: 'build_all'
        client-payload: '{ "action": "${{ github.event.client_payload.action }}", "label": "${{ github.event.client_payload.label }}" }'
    - name: Repository Dispatch - Server Service Logger Pino
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.ACCESS_TOKEN }}
        repository: thzero/library_server_service_logger_pino
        event-type: 'build_all'
        client-payload: '{ "action": "${{ github.event.client_payload.action }}", "label": "${{ github.event.client_payload.label }}" }'
    - name: Repository Dispatch - Server Service Logger Winston
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.ACCESS_TOKEN }}
        repository: thzero/library_server_service_logger_winston
        event-type: 'build_all'
        client-payload: '{ "action": "${{ github.event.client_payload.action }}", "label": "${{ github.event.client_payload.label }}" }'
    - name: Repository Dispatch - Server Service Messaging Slack
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.ACCESS_TOKEN }}
        repository: thzero/library_server_service_messaging_slack
        event-type: 'build_all'
        client-payload: '{ "action": "${{ github.event.client_payload.action }}", "label": "${{ github.event.client_payload.label }}" }'
    - name: Repository Dispatch - Server Service Monitoring AppMetrics
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.ACCESS_TOKEN }}
        repository: thzero/library_server_monitoring_appmetrics
        event-type: 'build_all'
        client-payload: '{ "action": "${{ github.event.client_payload.action }}", "label": "${{ github.event.client_payload.label }}" }'
    - name: Repository Dispatch - Server Service Discovery Lightweight Consul
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.ACCESS_TOKEN }}
        repository: thzero/library_server_service_discovery_resources_consul
        event-type: 'build_all'
        client-payload: '{ "action": "${{ github.event.client_payload.action }}", "label": "${{ github.event.client_payload.label }}" }'
    - name: Repository Dispatch - Server Service Discovery Lightweight Proto
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.ACCESS_TOKEN }}
        repository: thzero/library_server_service_discovery_resources_lightweight_proto
        event-type: 'build_all'
        client-payload: '{ "action": "${{ github.event.client_payload.action }}", "label": "${{ github.event.client_payload.label }}" }'
    - name: Repository Dispatch - Server Service Discovery MDNS
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.ACCESS_TOKEN }}
        repository: thzero/library_server_service_discovery_mdns
        event-type: 'build_all'
        client-payload: '{ "action": "${{ github.event.client_payload.action }}", "label": "${{ github.event.client_payload.label }}" }'
    - name: Repository Dispatch - Server Service REST Axios
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.ACCESS_TOKEN }}
        repository: thzero/library_server_service_rest_axios
        event-type: 'build_all'
        client-payload: '{ "action": "${{ github.event.client_payload.action }}", "label": "${{ github.event.client_payload.label }}" }'
